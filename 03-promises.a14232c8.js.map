{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjCH,EAAKC,KAAKM,iBAAiB,UAI3B,SAAoBC,GAGlB,GAFAA,EAAEC,iBAEET,EAAKI,MAAMM,cAAgB,GAAKV,EAAKM,OAAOI,cAAgB,GAAKV,EAAKK,KAAKK,cAAgB,EAC7FZ,EAAAa,OAAOC,QAAQ,8CACV,CACLC,EAAQb,EAAKI,MAAMM,cACnB,IAAK,IAAII,EAAI,EAAGA,EAAId,EAAKM,OAAOI,cAAgB,EAAGI,GAAK,EACtDD,GAASb,EAAKK,KAAKK,cACnBK,EAAcD,EAAGD,GACdG,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALb,MACjBN,EAAAa,OAAOS,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANF,EAAM,UAE9DG,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUK,EAAKN,EAALb,MAClBN,EAAAa,OAAOC,QAAQ,sBAAqCS,OAAfH,EAAS,QAAYG,OAANE,EAAM,cAjBpE,IAAIV,EAAQ,EAuBZ,SAASE,EAAcG,EAAUM,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEX,WAAUd,MAAAoB,IAEpBM,EAAO,CAAEZ,WAAUd,MAAAoB,MAEpBA,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onClickBtn);\nlet delay = 0;\n\n\nfunction onClickBtn(e) {\n  e.preventDefault();\n\n  if (refs.delay.valueAsNumber < 0 || refs.amount.valueAsNumber < 0 || refs.step.valueAsNumber < 0) {\n    Notify.failure('Delay or amount must be greater than 0');\n  } else {\n    delay = refs.delay.valueAsNumber;\n    for (let i = 1; i < refs.amount.valueAsNumber + 1; i += 1) {\n      delay += refs.step.valueAsNumber;\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","addEventListener","e","preventDefault","valueAsNumber","Notify","failure","$ce04d3a99e08e73b$var$delay","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay1","success","concat","catch","delay2","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.a14232c8.js.map"}