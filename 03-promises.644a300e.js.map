{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjCH,EAAKC,KAAKM,iBAAiB,UAG3B,SAAoBC,GAElB,GADAA,EAAEC,iBACET,EAAKI,MAAMM,cAAgB,GAAKV,EAAKM,OAAOI,cAAgB,GAAKV,EAAKK,KAAKK,cAAgB,EAC7FZ,EAAAa,OAAOC,QAAQ,8CACV,CAELC,EAAc,EADdC,EAAQd,EAAKI,MAAMM,eAEnB,IAAK,IAAIK,EAAI,EAAGA,EAAIf,EAAKM,OAAOI,cAAgB,EAAGK,GAAK,EACtDD,GAASd,EAAKK,KAAKK,cACnBG,EAAcE,EAAGD,OAXvB,IAAIA,EAAQ,EAgBZ,SAASD,EAAcG,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,UAERC,EAAO,WAERN,MAEFQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALtB,MACjBN,EAAAa,OAAOkB,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANF,EAAM,UAE9DG,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUK,EAAKN,EAALtB,MAClBN,EAAAa,OAAOC,QAAQ,sBAAqCkB,OAAfH,EAAS,QAAYG,OAANE,EAAM,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onClickBtn);\nlet delay = 0;\n\nfunction onClickBtn(e) {\n  e.preventDefault();\n  if (refs.delay.valueAsNumber < 0 || refs.amount.valueAsNumber < 0 || refs.step.valueAsNumber < 0) {\n    Notify.failure('Delay or amount must be greater than 0');\n  } else {\n    delay = refs.delay.valueAsNumber;\n    createPromise(0, delay);\n    for (let i = 0; i < refs.amount.valueAsNumber - 1; i += 1) {\n      delay += refs.step.valueAsNumber;\n      createPromise(i, delay);\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('succes')\n      } else {\n        reject('error')\n      }\n    }, delay)\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","addEventListener","e","preventDefault","valueAsNumber","Notify","failure","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$delay","i","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","position","delay2","success","concat","catch","delay3"],"version":3,"file":"03-promises.644a300e.js.map"}